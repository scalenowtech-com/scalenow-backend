import { Response } from "express";
import { createLeadForm, contactForm, upsertUser } from "./db";
import { ContactDTO } from "./schema";
import { LeadForm, SubscribedUser } from "@prisma/client";
import { sendEmail } from "../utils/mailer";
import { MAIL_USERNAME } from "../config";

const saveContactLead = async (req: any, res: Response) => {
  try {
    const data: {
      organisationName: string;
      industries: string[];
      servicesNeeded: string[];
      fullName: string;
      position: string;
      businessPhoneNumber: string;
      companyEmail: string;
    } = req.body;

    const createData: ContactDTO = {
      ...data,
      industries: JSON.stringify(data.industries),
      servicesNeeded: JSON.stringify(data.servicesNeeded),
    };

    const { data: contactLead, error } = await createLeadForm(createData);

    if (error !== null) {
      return res.status(400).json({
        data: null,
        error,
      });
    }

    sendEmail({
      to: "scalenow@scalenowtech.com",
      from: MAIL_USERNAME,
      subject: `A new lead has been generated by ${data.companyEmail}`,
      html: `
    <p>
      Organisation Name: ${data.organisationName}
    </p>
    <br />
    <p>
      Industries: ${data.industries.join(", ")}
    </p>
    <br />
    <p>
      Services Needed: ${data.servicesNeeded.join(", ")}
    </p>
    <br />
    <p>
      Full Name: ${data.fullName}
    </p>
    <br />
    <p>
      Position: ${data.position}
    </p>
    <br />
    <p>
      Business Phone Number: ${data.businessPhoneNumber}
    </p>
    <br />
    <p>
      Company Email: ${data.companyEmail}
    </p>
    `,
    });

    return res.json({
      data: contactLead,
      error,
    });
  } catch (err: any) {
    const error = err.message || err;
    res.status(500).json({
      data: null,
      error,
    });
  }
};

const saveContactMessage = async (req: any, res: Response) => {
  try {
    const data: Omit<LeadForm, "id"> = req.body;

    const { data: contactLead, error } = await contactForm(data);

    if (error !== null) {
      return res.status(400).json({
        data: null,
        error,
      });
    }

    sendEmail({
      to: "scalenow@scalenowtech.com",
      from: MAIL_USERNAME,
      subject: `Message from ${data.name}`,
      html: `
    <p>
      Name: ${data.name}
    </p>
    <br />
    <p>
      Email: ${data.email}
    </p>
    <br />
    <p>
      Message: ${data.message}
    </p>
    `,
    });

    if (req.query.send === "yes") {
      sendEmail({
        to: data.email,
        from: MAIL_USERNAME,
        subject: `You send a message to Scalenowtech`,
        html: `
      <p>
        Message: ${data.message}
      </p>
      `,
      });
    }

    return res.json({
      data: contactLead,
      error,
    });
  } catch (err: any) {
    const error = err.message || err;
    res.status(500).json({
      data: null,
      error,
    });
  }
};

const subscribe = async (req: any, res: Response) => {
  try {
    const data: Omit<SubscribedUser, "id"> = req.body;

    const { data: contactLead, error } = await upsertUser(data);

    if (error !== null) {
      return res.status(400).json({
        data: null,
        error,
      });
    }

    if (contactLead.isSubscribed !== 0) {
      sendEmail({
        to: "scalenow@scalenowtech.com",
        from: MAIL_USERNAME,
        subject: `${contactLead.firstName} subscribed to our newsletter`,
        html: `
      <p>
        Name: ${contactLead.firstName} ${contactLead.lastName}
      </p>
      <br />
      <p>
        Email: ${contactLead.email}
      </p>
      `,
      });
    }

    if (req.query.send === "yes") {
      sendEmail({
        to: data.email,
        from: MAIL_USERNAME,
        subject: `You have subscribe to Scalenowtech's newsletter`,
        html: `
      <p>
        Name: ${contactLead.firstName} ${contactLead.lastName}
      </p>
      <br />
      <p>
        Email: ${contactLead.email}
      </p>
      `,
      });
    }

    return res.json({
      data: contactLead,
      error,
    });
  } catch (err: any) {
    const error = err.message || err;
    res.status(500).json({
      data: null,
      error,
    });
  }
};

export { saveContactLead, saveContactMessage, subscribe };
